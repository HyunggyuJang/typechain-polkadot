/* This file is auto-generated */

import type { ContractPromise } from '@polkadot/api-contract';
import type { ApiPromise } from '@polkadot/api';
import type { GasLimit, GasLimitAndRequiredValue, Result } from '@arthswap/typechain-types';
import type { QueryReturnType } from '@arthswap/typechain-types';
import { queryJSON, queryOkJSON, handleReturnType } from '@arthswap/typechain-types';
import type * as ArgumentTypes from '../types-arguments/{{{fileName}}}';
import type * as ReturnTypes from '../types-returns/{{{fileName}}}';
import type BN from 'bn.js';
import TYPE from '../data/{{{fileName}}}.json'
//@ts-ignore
import {ReturnNumber} from '@arthswap/typechain-types';
{{#if additionalImports.length}}
{{#each additionalImports}}
import { {{#each values}}{{{this}}}{{#unless @last}}, {{/unless}}{{/each}} } from '{{{path}}}';
{{/each}}{{/if}}

export { TYPE }
export default class Methods {
	private __nativeContract : ContractPromise;
	private __apiPromise: ApiPromise;
	private __callerAddress : string;

	constructor(
		nativeContract : ContractPromise,
		nativeApi : ApiPromise,
		callerAddress : string,
	) {
		this.__nativeContract = nativeContract;
		this.__callerAddress = callerAddress;
		this.__apiPromise = nativeApi;
	}

{{#each methods}}
	/**
	* {{{toCamelCase name}}}
	*
	{{#each args}}
	* @param { {{{type.tsStr}}} } {{{toCamelCase name}}},
	{{/each}}
	* @returns { {{#if this.returnType}}{{{this.returnType.tsStr}}}{{else}}void{{/if}} }
	*/
	"{{{toCamelCase name}}}" (
	{{#each args}}
		{{{name}}}: {{{type.tsStr}}},
	{{/each}}
		__options ? : {{#if payable}}GasLimitAndRequiredValue{{else}}GasLimit{{/if}},
	){{{buildReturnType this}}}{
		return {{{buildReturn this}}} "{{{toCamelCaseForFunctions originalName}}}", [{{#each args}}{{{name}}}{{#unless @last}}, {{/unless}}{{/each}}], __options {{#buildWrapper this}}{{fileName}}{{/buildWrapper}});
	}

{{/each}}
}
